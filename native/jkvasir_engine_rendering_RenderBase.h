/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jkvasir_engine_rendering_RenderBase */

#ifndef _Included_jkvasir_engine_rendering_RenderBase
#define _Included_jkvasir_engine_rendering_RenderBase
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    nativeNew
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_jkvasir_engine_rendering_RenderBase_nativeNew
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    shouldClose
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_shouldClose
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setClearColour
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_setClearColour
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    clear
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_clear
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    swapBuffers
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_swapBuffers
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    pollEvents
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_pollEvents
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setPosition
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_setPosition
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_setSize
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setTitle
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_setTitle
  (JNIEnv *, jobject, jstring);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    isFullscreen
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_isFullscreen
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setFullscreen
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_setFullscreen
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setWindowed
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_setWindowed
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setResizable
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_setResizable
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    isResizable
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_isResizable
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setVisible
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_setVisible
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    isVisible
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_isVisible
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    init
 * Signature: (Ljava/lang/String;II)Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_init
  (JNIEnv *, jobject, jstring, jint, jint);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    destroy
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_destroy
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    renderMesh3D
 * Signature: (Ljkvasir/world/Camera3D;Ljkvasir/world/Mesh3D;Ljkvasir/engine/rendering/Shader;)V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_renderMesh3D
  (JNIEnv *, jobject, jobject, jobject, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    depthBufferActive
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_depthBufferActive
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    getType
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_jkvasir_engine_rendering_RenderBase_getType
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    getKeystate
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jkvasir_engine_rendering_RenderBase_getKeystate
  (JNIEnv *, jobject, jint);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    getPositionX
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jkvasir_engine_rendering_RenderBase_getPositionX
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    getPositionY
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jkvasir_engine_rendering_RenderBase_getPositionY
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    getWidth
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jkvasir_engine_rendering_RenderBase_getWidth
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    getHeight
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jkvasir_engine_rendering_RenderBase_getHeight
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setWidth
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_setWidth
  (JNIEnv *, jobject, jint);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    setHeight
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jkvasir_engine_rendering_RenderBase_setHeight
  (JNIEnv *, jobject, jint);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    getAspect
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_jkvasir_engine_rendering_RenderBase_getAspect
  (JNIEnv *, jobject);

/*
 * Class:     jkvasir_engine_rendering_RenderBase
 * Method:    keyPressed
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jkvasir_engine_rendering_RenderBase_keyPressed
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
